<div class="top-row ps-3 navbar navbar-dark">
    <div class="container-fluid">
        <a class="navbar-brand" href="">Home Cafeteria</a>
        <button title="Navigation menu" class="navbar-toggler" @onclick="ToggleNavMenu">
            <span class="navbar-toggler-icon"></span>
        </button>
    </div>
</div>

<div class="@NavMenuCssClass nav-scrollable" @onclick="ToggleNavMenu">
    <nav class="flex-column">
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="bi bi-house-door-fill-nav-menu" aria-hidden="true"></span> Home
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="products">
                <span class="bi bi-plus-square-fill-nav-menu" aria-hidden="true"></span> Products
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="POS">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> POS
            </NavLink>
        </div>
        <div class="nav-item px-3">
            <NavLink class="nav-link" href="Sales">
                <span class="bi bi-list-nested-nav-menu" aria-hidden="true"></span> Sales
            </NavLink>
        </div>
    </nav>
</div>

@code {
    private bool collapseNavMenu = false;
    private string? NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    [Inject] private NavigationManager Navigation { get; set; } = default!;

    protected override void OnInitialized()
    {
        Navigation.LocationChanged += HandleNavigationChanged;
    }

    private void HandleNavigationChanged(object? sender, LocationChangedEventArgs e)
    {
        collapseNavMenu = false;
        StateHasChanged();
    }

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    public void Dispose()
    {
        Navigation.LocationChanged -= HandleNavigationChanged;
    }
}
